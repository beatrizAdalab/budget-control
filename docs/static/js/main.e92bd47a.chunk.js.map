{"version":3,"sources":["components/Header.js","components/Error.js","components/InitialQuestion.js","components/Form.js","components/Expenditure.js","components/ListExpenditures.js","components/Helper.js","components/ControlRemainder.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Error","message","InitialQuestion","setBudget","setQuestionBudget","setRemainder","useState","initialMoney","setInitialMoney","error","setError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Form","setExpenditure","setCreateExpenditure","nameExpenditure","setNameExpenditure","quantityExpenditure","setQuantityExpenditure","htmlFor","required","id","onClick","Expenditure","shortid","generate","expenditure","ListExpenditures","listExpenditures","map","key","Helper","budget","remainder","ControlRemainder","App","questionBudget","createExpenditure","allExpenditures","setAllExpenditures","useEffect","budgetRemainder","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e92bd47a.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n    return (\n        <nav className='navbar navbar-expand-lg navbar-light bg-light d-flex justify-content-center'>\n            <h1 className='navbar-brand '>MoneySaved</h1>\n        </nav>\n    )\n\n}\n\nexport default Header;","import React from 'react';\n\nfunction Error({message}) {\n    return (\n        <div className='w-100 text-center alert alert-dismissible alert-warning'>\n            {message}\n        </div>\n    )\n}\n\nexport default Error;","import React, { Fragment, useState } from 'react';\nimport Error from '../components/Error'\n\nfunction InitialQuestion({ setBudget, setQuestionBudget, setRemainder }) {\n\n    const [initialMoney, setInitialMoney] = useState(0);\n    const [error, setError] = useState(false)\n\n    const addBudget = e => {\n        e.preventDefault();\n        if (initialMoney < 1 || isNaN(initialMoney)) {\n            setError(true);\n            return;\n        }\n        setError(false);\n        setBudget(initialMoney);\n        setRemainder(initialMoney)\n        setQuestionBudget(false)\n\n    }\n\n\n    return (\n        <Fragment>\n            <div className='container-InitialQuestion d-flex justify-content-center align-items-center'>\n                <form className='form-InitialQuestion d-flex flex-column justify-content-center align-items-center'\n                    onSubmit={addBudget} >\n                    <h2 className='pb-4 m-0'>Decide your budget</h2>\n                    {(error)?<Error message='The budget is incorrect' />:null}\n\n                    <input\n                        type='number'\n                        className='form-control mb-5'\n                        placeholder='eg. 100'\n                        onChange={e => setInitialMoney(parseInt(e.target.value, 10))} />\n                    <button\n                        type='submit'\n                        className='btn btn-success'\n                        value='initialBudget'>Define Budget</button>\n                </form>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default InitialQuestion;","import React, { useState } from 'react';\nimport Error from '../components/Error'\nimport shortid from 'shortid'\n\nfunction Form({ setExpenditure, setCreateExpenditure }) {\n\n    const [nameExpenditure, setNameExpenditure] = useState('');\n    const [quantityExpenditure, setQuantityExpenditure] = useState(0);\n    const [error, setError] = useState(false);\n\n    const addExpenditure = (e) => {\n        e.preventDefault();\n        if (quantityExpenditure < 1 || isNaN(quantityExpenditure) || nameExpenditure === '') {\n            setError(true);\n            return;\n        }\n\n        const Expenditure = {\n            nameExpenditure,\n            quantityExpenditure,\n            id: shortid.generate()\n        }\n\n        setExpenditure(Expenditure);\n        setCreateExpenditure(true)\n \n        //reset form\n        setError(false);\n        setNameExpenditure('');\n        setQuantityExpenditure(0);\n    }\n\n\n    return (\n        <div className=' container-new-cost d-flex flex-column justify-content-center align-items-center'>\n\n            <h4 className='py-4 m-0 text-success'>Add your expenses</h4>\n            {(error) ? <Error message='All fields must be completed' /> : null}\n            <form className='form-InitialQuestion d-flex flex-column justify-content-center w-100'>\n\n                <div className='form-group'>\n                    <label className='' htmlFor='concept'>Concept: </label>\n                    <input\n                        required\n                        type='text'\n                        id='concept'\n                        value={nameExpenditure}\n                        className='form-control mb-3'\n                        placeholder='eg. transport '\n                        onChange={e => (setNameExpenditure(e.target.value))}\n                    />\n                </div>\n\n                <div className='form-group'>\n                    <label className='' htmlFor='quantity'>Quantity: </label>\n                    <input\n                        required\n                        value={quantityExpenditure}\n                        type='number'\n                        id='quantity'\n                        className='form-control mb-3'\n                        placeholder='eg. 20 '\n                        onChange={e => (setQuantityExpenditure(parseInt(e.target.value, 10)))}\n                    />\n                    <div className='d-flex justify-content-center align-items-center'>\n                        <button\n                            type='submit'\n                            onClick={addExpenditure}\n                            className='btn btn-success align-self-center'\n                            value=''>New expenditure</button>\n                    </div>\n\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Form;","import React from 'react';\n\nfunction Expenditure({ expenditure }) {\n\n    return (\n        <li className='list-group-item d-flex justify-content-between align-items-center'>\n            {expenditure.nameExpenditure}\n            <span className='badge badge-warning badge-pill'>{expenditure.quantityExpenditure}</span>\n        </li>\n    )\n}\n\nexport default Expenditure","import React from 'react';\nimport Expenditure from './Expenditure'\n\nfunction ListExpenditures({ listExpenditures }) {\n\n    return (\n\n        <div className='list-expenditures py-3'>\n            <h4 className='title-expenditure text-center pb-4 m-0 text-success'>Expenditures</h4>\n            <ul className='list-group'>\n                {listExpenditures.map(expenditure => (\n                    <Expenditure\n                        expenditure={expenditure}\n                        key={expenditure.id} />\n                ))}\n            </ul>\n\n        </div>\n    )\n}\n\nexport default ListExpenditures;","\nconst Helper =(budget, remainder)=>{\n\n    let classColor;\n\n    if((budget / 4 ) > remainder){\n        classColor='text-white bg-danger'\n    } else if((budget / 2 ) > remainder){\n        classColor='text-white bg-warning'\n\n    } else{\n        classColor= 'text-white bg-success'\n    }\n\n    return classColor\n\n}\n\nexport default Helper","import React, {Fragment} from 'react';\nimport Helper from './Helper'\n\nconst ControlRemainder =({budget, remainder})=>\n   (\n        <Fragment>\n         \n            <div className='card bg-light mb-3 mt-2'>\n                <div className='card-body'>\n                    <div className='card-text'>\n                    Budget: {budget}€\n                    </div>\n                </div>\n            </div>\n\n\n            <div className={Helper(budget, remainder)}>\n                <div className='card-body'>\n                    <div className='card-text'>\n                    Remainder: {remainder}€\n                    </div>\n                </div>\n            </div>\n            \n        </Fragment>\n    )\n\n\nexport default ControlRemainder","import React, { useState, useEffect } from 'react';\nimport './bootstrap.css';\nimport Header from './components/Header';\nimport InitialQuestion from './components/InitialQuestion';\nimport Form from './components/Form';\nimport ListExpenditures from './components/ListExpenditures';\nimport ControlRemainder from './components/ControlRemainder';\n\n\n\nfunction App() {\n\n  const [budget, setBudget] = useState(0);\n  const [remainder, setRemainder]=useState(0);\n  const [questionBudget, setQuestionBudget] = useState(true);\n  const [createExpenditure, setCreateExpenditure] = useState(false);\n  const [expenditure, setExpenditure] = useState({})\n  const [allExpenditures, setAllExpenditures] = useState([])\n\n  useEffect(() => {\n    if (createExpenditure) {\n      const listExpenditures = [...allExpenditures, expenditure];\n      setAllExpenditures(listExpenditures);\n\n      const budgetRemainder = remainder-expenditure.quantityExpenditure;\n      setRemainder(budgetRemainder)\n\n      setCreateExpenditure(false)\n    }\n  }, [expenditure, createExpenditure, allExpenditures, remainder])\n\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className='container'>\n        {(questionBudget) ?\n\n          <InitialQuestion \n            setBudget={setBudget} \n            setQuestionBudget={setQuestionBudget} \n            setRemainder={setRemainder}/> :\n\n          <div className='row container-InitialQuestion d-flex justify-content-center align-items-center'>\n            <div className='col-12 col-lg-6 '>\n              <Form\n                setExpenditure={setExpenditure}\n                setCreateExpenditure={setCreateExpenditure} />\n            </div>\n            <div className='result py-3 bg-light col-12 col-lg-6 order-first order-lg-2'>\n            <ControlRemainder\n              budget={budget}\n              remainder={remainder}/>\n              <ListExpenditures\n                listExpenditures={allExpenditures} />\n            </div>\n\n          </div>\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}